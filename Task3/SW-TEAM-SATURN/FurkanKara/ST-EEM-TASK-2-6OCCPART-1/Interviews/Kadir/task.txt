Üniversite öğrencisi arkadaşlarımızla birlikte üzerinde çalıştığımız tamamen gönüllü bir elektrikli araç projemiz var. Bu projede herhangi bir maddi kazanç söz konusu değil; amacımız, gömülü sistemler, yazılım geliştirme, test süreçleri ve entegrasyon konularında gerçek bir mühendislik deneyimi kazanmak.

Bu süreçte, proje kapsamında ileri seviye yazılım geliştirme eğitimleri gerçekleştirilecek. Katılanlar, gömülü sistemlerde yazılım geliştirme, modelleme, test süreçleri (MIL, SIL, HIL), versiyon kontrol sistemleri ve profesyonel proje yönetimi gibi kritik alanlarda bilgi ve deneyim kazanmaktadır.

Bu zamana kadar yaptığımız çalışmaların büyük bir kısmını open-source olarak paylaştık ve paylaşmaya devam ediyoruz. Tüm bu içerikleri aşağıdaki YouTube kanalımızda bulabilirsin:

https://www.youtube.com/@EgeMobilTakimi

Katılım elemesi için yaptığım interview kısmını yapabildiğiniz kadarını 20 şubat'a kadar;


atakanertekinn@gmail.com adresine gönderirseniz sevinirim. Interview ile ilgili 7/24 soru sorabilirsiniz.


Interview içeriği


Araç kontrol modülü için C dilinde yeni bir gaz pedalı yazılımı geliştirilmelidir.

Gaz pedalından birbirinin eşleniği iki analog veri okunmaktadır. Bu veriler, 0,5V-4,5V aralığında değişmektedir ve her 10 milisaniyede bir okunmaktadır.
Analog veriler, gaz pedalının konumunu temsil etmektedir. Bu veriler, araç kontrol modülü tarafından alınıp işlenmeli ve ardından motor hızını belirlemek için kullanılmalıdır.

Veriler, gaz pedalı konumuna bağlı olarak motorun hızını doğrudan ayarlamak üzere dönüştürülecektir.
Bu yazılım, motorun hızını ve torkunu gaz pedalı konumuna göre hassas bir şekilde kontrol etmek için kullanılacaktır.
Mevcut sistem katmanlarını (application, controller, interface, source, system) hesaba katarak tasarlanmalı ve geliştirilmelidir.

Geliştirmenizi yaparken, nasıl bir yaklaşım izleyeceğinizi ve hangi adımları takip edeceğinizi açıklamanız beklenmektedir.
Not: Sistemde araç gösterge paneli, motor sürücü, kontrol paneli gibi birimler var. Etkileneceğini düşündüğünüz birimleri koda dahil edebilirsiniz.
* Sistemin modülerlik seviyesinin yüksek olması bekleniyor.
* Adımlardan kod geliştirme kısmında, C kodlarınızı paylaşmanız bekleniyor.


Application Layer (Uygulama Katmanı):
En üst katman olan uygulama katmanı, iş mantığının yürütüldüğü yerdir.
Kullanıcı gereksinimlerini karşılayacak işlevselliği barındırır.

Kullanıcı arayüzünden gelen istekleri alır ve işleme tabi tutar.
Bu katmanda, iş mantığı fonksiyonları ve kullanıcı arayüzüyle etkileşim kodları bulunur.

    - getEnginePercentage --, burada ne kadarlık bir kısmı olacak ?
    - Bazı arayüz eklemeleri, sayısal komut ekranı veya canlı veri ?


Controller Layer (Kontrol Katmanı):
Uygulama katmanının altında bulunan bu katman, gelen istekleri işler.

İsteklerin yönlendirilmesi ve işlenmesi burada gerçekleşir.
Veri doğrulama, yetkilendirme ve işlem yönlendirmesi gibi işlevler bu katmanda yer alır.
İş mantığını direkt olarak içermemeli, sadece gelen istekleri işleyip uygun katmanlara iletmelidir.
    - Sadece altını ve üstünü bilen, izole bir yönlendirme ve dağıtım katmanı
    - Gelen isteğin çalıştırılması ve istek sonucunun döndürülmesi


Interface Layer (Arayüz Katmanı):
Bu katman, dış sistemlerle (diğer yazılım uygulamaları, veritabanları vb.) iletişimi sağlar.
Veri alışverişi için API'ler veya diğer iletişim protokolleri kullanılır.
Gelen ve giden verilerin dönüşümü, uygun formatlara dönüştürülmesi bu katmanda gerçekleştirilir.
Güvenlik ve yetkilendirme işlemleri de burada yapılabilir.


Source Layer (Kaynak Katmanı):
Veri depolama ve yönetimini sağlar.
Veritabanı işlemleri (okuma, yazma, güncelleme, silme) burada gerçekleştirilir.
Veritabanı bağlantısı ve sorgular bu katmanda olabilir.


System Layer (Sistem Katmanı):
Altyapıyı yöneten katmandır.
İşletim sistemi, ağ bağlantıları, günlükleme (log) gibi sistem düzeyi işlevler burada yer alır.
Genellikle donanım ile yazılım arasındaki etkileşimi sağlar.