#include <main.h>

// LED ve Buton Bağlantıları
#define LED_PIN     GPIO_PIN_0
#define LED_PORT    GPIOB
#define BUTTON_PIN  GPIO_PIN_1
#define BUTTON_PORT GPIOB

// Durumlar
typedef enum 
{
    IDLE,
    LED_BLINK,
    LED_ON,
    LED_OFF
} State_t;

volatile State_t currentState = IDLE;
volatile uint8_t buttonPressed = 0;

void SystemClock_Config(void);
void GPIO_Init(void);

int main(void) 
{
    HAL_Init();
    SystemClock_Config();
    GPIO_Init();
    
    while (1) 
	{
        // Buton basılmasını kontrol et
        if (buttonPressed) 
		{
            buttonPressed = 0; // Bayrağı sıfırla
            
            // Durum geçişleri
            switch (currentState) 
			{
                case IDLE:
                    currentState = LED_BLINK;
                    break;
                case LED_BLINK:
                    currentState = LED_ON;
                    break;
                case LED_ON:
                    currentState = LED_OFF;
                    break;
                case LED_OFF:
                    currentState = IDLE;
                    break;
            }
        }
        
        // Durumlara göre LED kontrolü
        switch (currentState) 
		{
            case IDLE:
                HAL_GPIO_WritePin(LED_PORT, LED_PIN, GPIO_PIN_RESET);
                break;
            case LED_BLINK:
                HAL_GPIO_TogglePin(LED_PORT, LED_PIN);
                HAL_Delay(500);
                break;
            case LED_ON:
                HAL_GPIO_WritePin(LED_PORT, LED_PIN, GPIO_PIN_SET);
                break;
            case LED_OFF:
                HAL_GPIO_WritePin(LED_PORT, LED_PIN, GPIO_PIN_RESET);
                break;
        }
    }
}

void GPIO_Init(void) 
{
    __HAL_RCC_GPIOB_CLK_ENABLE();
    
    GPIO_InitTypeDef GPIO_InitStruct = {0};
    
    GPIO_InitStruct.Pin = LED_PIN;
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    HAL_GPIO_Init(LED_PORT, &GPIO_InitStruct);
    
    GPIO_InitStruct.Pin = BUTTON_PIN;
    GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    HAL_GPIO_Init(BUTTON_PORT, &GPIO_InitStruct);
    
    HAL_NVIC_SetPriority(EXTI1_IRQn, 0, 0);
    HAL_NVIC_EnableIRQ(EXTI1_IRQn);
}

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) 
{
    if (GPIO_Pin == BUTTON_PIN) 
	{
        buttonPressed = 1;
    }
}
