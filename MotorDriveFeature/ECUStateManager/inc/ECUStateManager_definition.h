#ifndef ECUSTATEMANAGER_INC_ECUSTATEMANAGER_DEFINITION_H_
#define ECUSTATEMANAGER_INC_ECUSTATEMANAGER_DEFINITION_H_

#include "stdio.h"
#include "stdint.h" 

#define SIL_INTEGRATION
//#undef SIL_INTEGRATION

typedef enum
{
	ECUSTATE_STARTUP = 0,
	ECUSTATE_INIT	 ,
	ECUSTATE_ROUTINE ,
	ECUSTATE_PROCESS ,
	ECUSTATE_SUSPEND ,
	ECUSTATE_DEFAULT
}dtEcuState;

typedef dtEcuState dtECUStateManager_ecuState;

typedef enum
{
	STARTUP_UNKNOWN = 0,
	STARTUP_PRE_INIT  ,
	STARTUP_INIT	  ,
	STARTUP_POST_INIT ,
}dtStartUp;

typedef dtStartUp dtECUStateManager_startUp;

typedef enum
{
	REFRESHSTATE_UNKNOWN 			 = 0,
	/* Motor Driver Feature  */
	REFRESHSTATE_GATEDRIVERCONTROLLER 	   ,
	REFRESHSTATE_MOTORDRIVERCONTROLMANAGER ,
	REFRESHSTATE_BRAKEANDDIRECTIONMANAGER  ,
	REFRESHSTATE_SPEEDCONTROLMANAGER	   ,
	REFRESHSTATE_PWMCONFIGURATION		   ,
	REFRESHSTATE_MOTORDRIVERCOMMPROXY      ,
	REFRESHSTATE_MOTORDRIVERDCMPROXY       ,
	/* Analog Configuration Feature  */
	REFRESHSTATE_ANALOGREAD 			,
	/* Communication Feature ruRefresh */
	REFRESHSTATE_COMMUNICATION 			,
	/***********************************/
	REFRESHSTATE_SUSPEND			    ,
	REFRESHSTATE_DEFAULT			    ,
}dtRefreshState;

typedef dtRefreshState dtECUStateManager_refreshState;

typedef enum
{
    PROCESSSTATE_UNKNOWN           = 0 ,
	/* Motor Driver Feature  */
	PROCESSSTATE_INTERRUPTHANDLERMANAGER_EXTERNALTRIGGER ,
	PROCESSSTATE_INTERRUPTHANDLERMANAGER_TIMERTRIGGER ,
	PROCESSSTATE_HALLSENSORCONFIGURATION_UPDATE ,
	PROCESSSTATE_HALLSENSORCONFIGURATION_CALCULATEWHEELSPEED ,
	PROCESSSTATE_PWMCONFIGURATION_UPDATE ,
	PROCESSSTATE_DIRECTIONANDBRAKEMANAGER_UPDATE ,
	PROCESSSTATE_SPEEDCONTROLMANAGER_UPDATE ,
	PROCESSSTATE_MOTORDRIVEDCMPROXY_COLLECT ,
	PROCESSSTATE_MOTORDRIVECOMMPROXY_UPDATEDIRECTION ,
	PROCESSSTATE_MOTORDRIVECOMMPROXY_UPDATESPEED ,
	PROCESSSTATE_MOTORDRIVECOMMPROXY_UPDATEWHEELSPEED ,
	/* Communication Feature ruRefresh */
	PROCESSSTATE_TXSIGNALADAPTER       ,
	/* Analog Configuration Feature  */
	PROCESSSTATE_ANALOGDATAWRAPPER     ,
    /***********************************/
    PROCESSSTATE_FINISHED		       ,
	PROCESSSTATE_DEFAULT		       ,
}dtProcessState;

typedef dtProcessState dtECUStateManager_processState;

extern void ECUStateManager_RunProcess(dtECUStateManager_processState processState);

#endif /* ECUSTATEMANAGER_INC_ECUSTATEMANAGER_DEFINITION_H_ */